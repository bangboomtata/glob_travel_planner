generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // Uses connection pooling
  url       = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Question {
  id        Int          @id @default(autoincrement())
  text      String
  type      QuestionType
  options   String[]
  createdAt DateTime     @default(now())
  // answers     Answer[]     

  @@map("questions")
}

// model Answer {
//   id           Int        @id @default(autoincrement()) @map("answerId")
//   questionId   Int
//   answer       Json
//   question     Question   @relation(fields: [questionId], references: [id])
//   preferenceId Int?
//   preference   Preference? @relation("PreferenceAnswers", fields: [preferenceId], references: [id])

//   @@map("answers")
// }

model Preference {
  id        Int      @id @default(autoincrement())
  userId    Int
  answers   Json
  // answers    Answer[]  @relation("PreferenceAnswers")
  createdAt DateTime @default(now())
  // user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("preferences")
}

model User {
  id          Int          @id @default(autoincrement())
  // preferences Preference[]
}

enum QuestionType {
  TRAVEL_TASTE
  DIETARY_RESTRICTIONS
  TRIP_DURATION
  AIRPORT
  START_DATE
  START_DATE_FLEXIBILITY
  BUDGET
}
