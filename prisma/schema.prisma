generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Question {
  id        Int          @id @default(autoincrement())
  text      String
  type      QuestionType
  options   String[]
  createdAt DateTime     @default(now())

  @@map("questions")
}

model Itinerary {
  id                 Int             @id @default(autoincrement())
  generatedItinerary Json
  userId             Int
  status             ItineraryStatus @default(UNBOOKED)
  createdAt          DateTime        @default(now())

  preferenceId       Int
  preference         Preference     @relation(fields: [preferenceId], references: [id], onDelete: Cascade) 

  flights            Flight[]        @relation("ItineraryFlights")
  places             Place[]         @relation("ItineraryPlaces")

  @@map("itineraries")
}

model Place {
  id            Int         @id @default(autoincrement())
  name          String
  googleMapLink String
  itineraries   Itinerary[] @relation("ItineraryPlaces")

  @@map("places")
}

model Flight {
  id                 Int      @id @default(autoincrement())
  flightDetails      Json?    
  itineraryId        Int
  createdAt          DateTime @default(now())

  itinerary          Itinerary @relation("ItineraryFlights", fields: [itineraryId], references: [id], onDelete: Cascade) 

  @@map("flights")
}

model Preference {
  id        Int      @id @default(autoincrement())
  userId    Int
  answers   Json
  createdAt DateTime @default(now())

  itineraries Itinerary[]

  @@map("preferences")
}


enum ItineraryStatus {
  UNBOOKED
  BOOKED
  NO_FLIGHTS
}

model User {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
}

enum QuestionType {
  TRAVEL_TASTE
  DIETARY_RESTRICTIONS
  TRIP_DURATION
  AIRPORT
  START_DATE
  START_DATE_FLEXIBILITY
  BUDGET
  DISLIKE_ACTIVITIES
  TRAVEL_TASTE_2
  WEATHER
  OUTDOOR_ACTIVITIES
  CULTURE
  ATMOSPHERE
  NUMBER_OF_TRAVELERS
  PLACES_TO_AVOID
}
