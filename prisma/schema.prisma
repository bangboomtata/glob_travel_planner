model Question {
  id        Int         @id @default(autoincrement())
  text      String      // The question text
  type      QuestionType
  options   String[]?   // Array of options for questions with checkboxes
  answers   Answer[]    // Relationship to possible answers
  createdAt DateTime    @default(now())
  preferences Preference[]
}

model Answer {
  id         Int        @id @default(autoincrement())
  questionId Int
  question   Question   @relation(fields: [questionId], references: [id], onDelete: Cascade)
  text       String     // Answer text, e.g., 'Vegan', 'Flexible by +/- 1 day'
  value      Json?      // For slider or other types that may store ranges or additional data
  preferences Preference[]
}

model Preference {
  id         Int        @id @default(autoincrement())
  userId     Int
  questionId Int
  answerIds  Int[]      // Array of selected answer IDs for questions with multiple choices
  User       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  Question   Question   @relation(fields: [questionId], references: [id], onDelete: Cascade)
  createdAt  DateTime   @default(now())
}

model User {
  id         Int          @id @default(autoincrement())
  name       String?      @db.VarChar(255)
  email      String       @unique @db.VarChar(255)
  preferences Preference[]
}

enum QuestionType {
  TRAVEL_TASTE
  DIETARY_RESTRICTIONS
  TRIP_DURATION
  AIRPORT
  START_DATE
  START_DATE_FLEXIBILITY
  BUDGET
}
